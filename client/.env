# Teste para Trabalho - ACObrazil
<img src="./logoaco.png" alt="Logo ACObrazil" width="300" />


Este repositório contém o projeto para o teste de trabalho da ACObrazil. O projeto é dividido em duas partes: **Client** e **Server**. A seguir, você encontrará as instruções para configurar e executar ambos os ambientes.

## Estrutura do Projeto

- **client**: Contém o frontend da aplicação.
- **server**: Contém o backend da aplicação.

## Requisitos

Antes de começar, verifique se você tem os seguintes requisitos instalados:

- [Node.js](https://nodejs.org) (versão LTS recomendada)
- [npm](https://www.npmjs.com/) (gerenciador de pacotes do Node.js)

## Configuração do Projeto

Siga os passos abaixo para configurar e rodar o projeto localmente.

### 1. Configurando o Frontend (Client)

1. Navegue até o diretório `client`:

    ```bash
    cd client
    ```

2. Instale as dependências:

    ```bash
    npm install
    ```

3. **Configure o arquivo `.env` no diretório `client`**. Crie um arquivo `.env` na raiz do diretório `client` com o seguinte conteúdo:

    ```env
    VITE_API_BASE_URL=http://localhost:5000/api
    ```

   - **VITE_API_BASE_URL**: A URL base para as requisições API do backend. O frontend vai se conectar nesse endpoint para consumir os dados da API. No exemplo, estamos usando `http://localhost:5000/api`.

4. Inicie o servidor de desenvolvimento do frontend:

    ```bash
    npm run dev
    ```

O frontend estará disponível em `http://localhost:5173` ou a porta configurada no seu ambiente.

### 2. Configurando o Backend (Server)

1. Navegue até o diretório `server`:

    ```bash
    cd server
    ```

2. Instale as dependências:

    ```bash
    npm install
    ```

3. **Configure o arquivo `.env` no diretório `server`**. Crie um arquivo `.env` na raiz do diretório `server` com o seguinte conteúdo:

    ```env
    DATABASE_URL=exemplo url
    PORT=5000
    JWT_SECRET=!@exemplo!@
    JWT_EXPIRES=1h
    CORS_ALLOWED=*
    ```

   - **DATABASE_URL**: A URL de conexão com o banco de dados. Essa variável é crucial para o backend se conectar ao seu banco. Substitua "exemplo url" pela URL real do seu banco de dados.
   - **PORT**: A porta em que o servidor backend estará rodando. Por padrão, estamos usando a porta 5000.
   - **JWT_SECRET**: Uma chave secreta para assinar tokens JWT. Isso é usado para gerar e verificar a autenticidade dos tokens de autenticação.
   - **JWT_EXPIRES**: O tempo de expiração do token JWT. No exemplo, ele expira em 1 hora (`1h`), mas você pode ajustar conforme necessário.
   - **CORS_ALLOWED**: Define quais domínios podem acessar a API (CORS). No exemplo, está permitindo qualquer domínio (`*`). Para maior segurança, você pode restringir isso para um domínio específico.

4. Inicie o servidor de desenvolvimento do backend:

    ```bash
    npm run dev
    ```

O backend estará disponível em `http://localhost:5000` ou a porta configurada no seu ambiente.

## Testes

Instruções sobre como rodar os testes (se houver).

### 1. Rodando os testes do frontend:

Se o projeto possuir testes para o frontend, você pode rodá-los com:

```bash
npm run test
